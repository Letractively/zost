# CONFIGURE ABAIXO O NOME DO BANCO DE DADOS COLOCANDO-O ENTRE ASPAS NA
# ATRIBUIÇÃO DA VARIÁVEL E SEM ASPAS NO COMANDO "USE"
SET @BANCODEDADOS := 'BANCODEOBRAS3';
USE BANCODEOBRAS3;

# ==============================================================================
# O QUE EU ESTOU FAZENDO AQUI...
# O PROCEDIMENTO "PRC_INSERT_INTO_DELTA" FOI ALTERADO PARA VOLTAR A SUA FORMA ORIGINAL. A PARTE OFENDENTE FOI COMENTADA PARA QUE NO FUTURO POSSA SER VERIFICADA
# ==============================================================================

# == VARIAVEIS TEMPORRIAS ======================================================
# A VARIÁVEL "SYNCHRONIZING" É ÚTIL APENAS NO CLIENTE POIS LÁ PODE HAVER AÇÕES
# EM TABELAS GERADAS DURANTE UMA SINCRONIZAÇÃO OU NÃO. NO SERVIDOR, QUANDO
# "SERVERSIDE" = TRUE, ESTA VARIÁVEL É IGNORADA POIS NO SERVIDOR ESTAREMOS
# SEMPRE SINCRONIZANDO

# O USO DESTAS VARIÁVEIS AQUI SÓ É EFETIVO SE HOUVER MANIPULÇÃO DE DADOS NESTE
# SCRIPT. SERVERSIDE = TRUE É CONDIÇÃO SUFICIENTE PARA DIZER QUE SE ESTÁ
# SINCRONIZANDO NO SERVIDOR POIS O SERVIDOR NÃO É ACESSÍVEL DIRETAMENTE, APENAS
# VIA SINCRONIZÇÃO
SET @SYNCHRONIZING = FALSE;
SET @CURRENTLOGGEDUSER = 1;
SET @SERVERSIDE = TRUE;
SET @ADJUSTINGDB = TRUE;
SET FOREIGN_KEY_CHECKS = 0;
# ATENÇÃO: QUANDO FOREIGN_KEY_CHECKS ESTÁ DESATIVADO NENHUMA FUNÇÃO RELACIONADA
# A INTEGRIDADE REFERENCIAL SERÁ EXECUTADA A SABER: ONDELETE E ONUPDATE. SE SUA
# INTENÇÃO É EXCLUIR PROPOSITALMENTE ALGUNS REGISTROS A TÍTULO DE LIMPEZA, ISSO
# DEVE SER FEITO QUANDO "FOREIGN_KEY_CHECKS = 1" DO CONTRÁRIO O BANCO FICARÁ
# INCONSISTENTE (REGISTROS ÓRFÃOS)
# ==============================================================================

# == STORED PROCEDURES =========================================================

# ------------------------------------------------------------------------------
DROP PROCEDURE IF EXISTS PRC_INSERT_INTO_DELTA;
DELIMITER ¬
CREATE PROCEDURE PRC_INSERT_INTO_DELTA(IN TABLENAME VARCHAR(32),
                                       IN KEYVALUE VARCHAR(64),
                                       IN ACTION ENUM('INS','UPD','DEL'),
                                       IN MASTERRECORDS VARCHAR(64))
SQL SECURITY DEFINER
BEGIN
    # --------------------------------------------------------------------------
    # COMPORTAMENTO DESTA FUNÇÃO PARA O DELTA NO CLIENTE
    # ¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯

    # <INSERÇÕES>
    # INSERÇÕES SÃO COLOCADAS NO DELTA SEM NENHUMA VERIFIÇÃO. O SCRIPT A SER
    # GERADO CONTERÁ UMA INSTRUÇÃO INSERT NORMAL SEM O ID DA TABELA EM QUESTÃO
    # PARA QUE O MESMO SEJA AUTOINCREMENTADO NO SERVIDOR.

    # <ATUALIZAÇÕES>
    # QUANDO SE ALTERA UM REGISTRO, FAZ-SE UMA BUSCA NO DELTA PROCURANDO UMA
    # ENTRADA QUE, SE JÁ EXISTIR, INDICA QUE TRATA-SE OU DA ALTERAÇÃO DE UM
    # REGISTRO QUE AINDA NÃO FOI ENVIADO AO SERVIDOR (INS) OU DA SEGUNDA
    # ALTERAÇÃO DE UM REGISTRO ANTIGO (UPD). QUANDO UMA DESTAS SITUAÇÕES OCORRE,
    # NÃO DEVEMOS MEXER EM NADA NO DELTA. NO PRIMEIRO CASO DEVIDO AO FATO DE
    # ESTARMOS ALTERANDO UM REGISTRO AINDA NÃO SINCRONIZADO E NO SEGUNDO DEVIDO
    # AO FATO DE ESTARMOS ALTERANDO PELA SEGUNDA VEZ O MESMO REGISTRO ANTIGO. NO
    # PRIMEIRO CASO TRATA-SE DE UMA INSERÇÃO SIMPLES E NO SEGUNDO UMA ALTERAÇÃO.
    # O SCRIPT A SER GERADO CONTERÁ UMA INSTRUÇÃO INSERT NORMAL SEM O ID DA
    # TABELA EM QUESTÃO PARA QUE O MESMO SEJA AUTOINCREMENTADO NO SERVIDOR. PARA
    # O SEGUNDO CASO HAVERÁ UM UPDATE NO REGISTRO ANTIGO. POR OUTRO LADO, QUANDO
    # SE ALTERA E, AO SE FAZER UMA BUSCA NO DELTA NÃO SE ENCONTRA NADA, INDICA
    # QUE TRATA-SE DA ALTERAO DE UM REGISTRO  "ANTIGO", ISTO É, QUE JÁ ESTÁ NO
    # SERVIDOR. NESSE CASO DEVER SER FEITA UMA ALTERAÇÃO NO SERVIDOR E PORTANTO
    # O DELTA CONTERÁ ESTA INFORMAÇÃO. O SCRIPT A SER GERADO CONTERÁ UMA
    # INSTRUÇÃO INSERT ACRESCIDA DE ON DUPLICATE KEY E AINDA COM O ID DO
    # REGISTRO A SER ALTERADO. O MOTIVO PELO QUAL NÃO SE USA UM UPDATE SIMPLES
    # AQUI É QUE HÁ A POSSIBILIDADE DE UM OUTRO CLIENTE TER EXCLUDO O REGISTRO
    # QUE ESTAMOS TENTANDO ALTERAR, LOGO USAR UM INSERT COM CAPACIDADE DE UPDATE
    # É  MELHOR: CASO O REGISTRO NÃO EXISTA ELE SERÁ CRIADO E CASO ELE EXISTA
    # SERÁ ALTERADO NORMALMENTE!

    # <EXCLUSÕES>
    # AO SE EXCLUIR UM REGISTRO FAZ-SE UMA BUSCA NO DELTA. SE O REGISTRO SENDO
    # EXCLUÍDO FOR ACHADO NO DELTA, E SE SUA AÇÃO FOR "INS" INDICA QUE ESTAMOS
    # APAGANDO UM REGISTRO QUE AINDA NÃO FOI ENVIADO AO SERVIDOR, LOGO,
    # SIMPLESMENTE IMPEDIMOS QUE ELE SEJA INSERIDO NO SERVIDOR, APAGANDO SUA
    # ENTRADA NO DELTA. POR OUTRO LADO, SE ELE FOR ACHADO NO DELTA E SE SUA AÇÃO
    # FOR UPD, SIGNIFICA QUE TRATA-SE DE UM REGISTRO ANTIGO QUE TINHA SIDO
    # ALTERADO (UPD) E AGORA FOI EXCLUDO. NESTE CASO ALTERA-SE A AÇÃO DE "UPD"
    # PARA "DEL".

    # COMPORTAMENTO DESTA FUNÇÃO PARA O DELTA NO SERVIDOR
    # ¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯

    # <INSERÇÕES>
    # INSERÇÕES SÃO COLOCADAS NO DELTA SEM NENHUMA VERIFIÇÃO. O DELTA CONTERÁ
    # UMA ENTRADA DO TIPO "INS".

    # <ATUALIZAÇÕES>
    # QUANDO SE ALTERA UM REGISTRO ELE PODE JÁ EXISTIR COMO "INS" OU COMO "UPD"
    # NO DELTA. NOS DOIS CASOS SERÁ FEITA UMA INSERÇÃO SIMPLES COM A AÇÃO "UPD"
    # ORIGINÁRIA. O DELTA DO SERVIDOR TEM DE MANTER TODAS AS ATUALIZAÇÕES DE UM
    # REGISTRO DE FORMA QUE OUTROS USUÁRIOS POSSAM SE BENEFICIAR DE TAIS
    # ALTERAÇÕES AO FAZEREM SUAS SINCRONIZAÇÕES. O QUE VAI EXISTIR NO DELTA
    # PORTANTO É UMA INSERÇÃO (INS) E ZERO OU MAIS ATUALIZAÇÕES (UPD)
    # SUBSEQUENTES DO MESMO REGISTRO. ISSO É NORMAL

    # <EXCLUSÕES>
    # AO SE EXCLUIR UM REGISTRO, NO DELTA SÓ PODERÁ HAVER "INS" OU "UPD" OU
    # AMBOS OU NENHUM PARAO REGISTRO SENDO EXCLUÍDO. NESTE CASO DEVEMOS SEMPRE
    # EXCLUIR DO DELTA TODAS AS REFERÊNCIAS AO REGISTRO SENDO EXCLUÍDO E MANTER
    # APENAS UMA REFERÊNCIA A "DEL" PARA O REGISTRO
    # --------------------------------------------------------------------------

    IF NOT @ADJUSTINGDB THEN
        # CASO EU ESTEJA NO CLIENTE E NÃO ESTEJA SINCRONIZANDO, ESTA FUNÇÃO VAI
        # ATUAR DE FORMA COMPLETA
        IF (NOT @SERVERSIDE) AND (NOT @SYNCHRONIZING) THEN
            IF ACTION = 'DEL' THEN
                CALL PRC_CLEAR_DELTA_FROM_ORPHANS(TABLENAME,KEYVALUE);
            END IF;

            IF (ACTION = 'INS') or (((ACTION = 'UPD') or (ACTION = 'DEL')) AND (NOT FNC_THE_DELTA_CONTAINS(TABLENAME,KEYVALUE,'B'))) THEN
                INSERT INTO DELTA (VA_NOMEDATABELA
                                  ,VA_MESTRES
                                  ,VA_CHAVE
                                  ,EN_ACAO)
                     VALUES (TABLENAME
                            ,MASTERRECORDS
                            ,KEYVALUE
                            ,ACTION);
            ELSE
                IF (ACTION = 'DEL') and FNC_THE_DELTA_CONTAINS(TABLENAME,KEYVALUE,'I') THEN
                    DELETE
                      FROM DELTA
                     WHERE VA_NOMEDATABELA = TABLENAME
                       AND VA_CHAVE = KEYVALUE
                       AND EN_ACAO = 'INS';
                ELSE
                    IF (ACTION = 'DEL') and FNC_THE_DELTA_CONTAINS(TABLENAME,KEYVALUE,'U') THEN
                        UPDATE DELTA
                           SET EN_ACAO = 'DEL'
                         WHERE VA_NOMEDATABELA = TABLENAME
                           AND VA_CHAVE = KEYVALUE
                           AND EN_ACAO = 'UPD';
                    END IF;
                END IF;
            END IF;
        ELSE
        # NESTE ELSE AS ÚNICAS OPÇÕES POSSÍVEIS SÃO @SERVERSIDE = TRUE E
        # (@SYNCHRONIZING = TRUE IMPLÍCITO) OU @SERVERSIDE = FALSE E
        # @SYNCHRONIZING = TRUE. RESUMINDO, NÓS SEMPRE ESTAREMOS SINCRONIZANDO E
        # PRECISAMOS APENAS DIFERENCIAR SE ESTAMOS NO CLIENTE OU NO SERVIDOR
            IF @SERVERSIDE THEN
                # CASO ESTE BLOCO IF SEJA COMENTADO OU REMOVIDO, A FUNÇÃO VOLTA
                # A TER SEU COMPORTAMENTO ORIGINAL
                /*
                IF ACTION = 'DEL' THEN
                    # LIMPANDO REGISTROS QUE FICARÃO ÓRFÃOS
                    CALL PRC_CLEAR_DELTA_FROM_ORPHANS(TABLENAME,KEYVALUE);

                    # REMOVENDO TODAS AS ENTRADAS QUE DIZEM RESPEITO AO REGISTRO
                    # SENDO EXCLUÍDO
                    DELETE
                      FROM DELTA
                     WHERE VA_NOMEDATABELA = TABLENAME
                       AND VA_CHAVE = KEYVALUE;
                END IF;
                */
                # INSERE A ENTRADA NO DELTA DE ACORDO COM OS PARÂMETROS PASSADOS
                INSERT INTO DELTA (VA_NOMEDATABELA
                                  ,VA_MESTRES
                                  ,VA_CHAVE
                                  ,EN_ACAO
                                  ,DT_DATAEHORADAACAO)
                     VALUES (TABLENAME
                            ,MASTERRECORDS
                            ,KEYVALUE
                            ,ACTION
                            ,SYSDATE());
            ELSE
            # CASO ESTE ELSE SEJA EXECUTADO SIGNIFICA QUE EU ESTOU NO CLIENTE E
            # ESTOU SINCRONIZANDO NESTE CASO NÃO DEVO FAZER NADA. A ESTRUTURA
            # COMPLETA IF/ELSE FOI DEIXADA AQUI PARA QUE POSSA SER COPIADA CASO
            # SEJA NECESSRIO
                DO 1;
            END IF;
        END IF;
    END IF;
END; ¬
DELIMITER ;
# ------------------------------------------------------------------------------

# == VIEWS =====================================================================

# ==============================================================================
# A PARTIR DESTE PONTO TODAS AS AÇÕES FARÃO USO DA INTEGRIDADE REFERENCIAL, O
# QUE SIGNIFICA QUE OS DADOS TEM DE ESTAR CORRETOS
SET FOREIGN_KEY_CHECKS = 1;
# ==============================================================================
# COMO TODOS PRECISARÃO REALIZAR SINCRONIZAÇÕES COMPLETAS, UMA BOA PRÁTICA É 
# LIMPAR O DELTA E ZERAR SUA NUMERAÇÃO DE AUTOINCREMENTOS;
TRUNCATE TABLE DELTA;
OPTIMIZE TABLE DELTA;
# ==============================================================================
